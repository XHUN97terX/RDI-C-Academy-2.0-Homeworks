//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapClient.Soap {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpireDTO", Namespace="http://schemas.datacontract.org/2004/07/SoapServer")]
    [System.SerializableAttribute()]
    public partial class EmpireDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EGovField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ENameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmpnoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EGov {
            get {
                return this.EGovField;
            }
            set {
                if ((object.ReferenceEquals(this.EGovField, value) != true)) {
                    this.EGovField = value;
                    this.RaisePropertyChanged("EGov");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EName {
            get {
                return this.ENameField;
            }
            set {
                if ((object.ReferenceEquals(this.ENameField, value) != true)) {
                    this.ENameField = value;
                    this.RaisePropertyChanged("EName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Empno {
            get {
                return this.EmpnoField;
            }
            set {
                if ((this.EmpnoField.Equals(value) != true)) {
                    this.EmpnoField = value;
                    this.RaisePropertyChanged("Empno");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Soap.IEmpService")]
    public interface IEmpService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/GetEmpires", ReplyAction="http://tempuri.org/IEmpService/GetEmpiresResponse")]
        SoapClient.Soap.EmpireDTO[] GetEmpires();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/GetEmpires", ReplyAction="http://tempuri.org/IEmpService/GetEmpiresResponse")]
        System.Threading.Tasks.Task<SoapClient.Soap.EmpireDTO[]> GetEmpiresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/GetEmpireNames", ReplyAction="http://tempuri.org/IEmpService/GetEmpireNamesResponse")]
        string[] GetEmpireNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/GetEmpireNames", ReplyAction="http://tempuri.org/IEmpService/GetEmpireNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetEmpireNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/GetGovernmentNames", ReplyAction="http://tempuri.org/IEmpService/GetGovernmentNamesResponse")]
        string[] GetGovernmentNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/GetGovernmentNames", ReplyAction="http://tempuri.org/IEmpService/GetGovernmentNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetGovernmentNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/AddEmpire", ReplyAction="http://tempuri.org/IEmpService/AddEmpireResponse")]
        bool AddEmpire(SoapClient.Soap.EmpireDTO empire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/AddEmpire", ReplyAction="http://tempuri.org/IEmpService/AddEmpireResponse")]
        System.Threading.Tasks.Task<bool> AddEmpireAsync(SoapClient.Soap.EmpireDTO empire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/RemoveEmpire", ReplyAction="http://tempuri.org/IEmpService/RemoveEmpireResponse")]
        bool RemoveEmpire(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/RemoveEmpire", ReplyAction="http://tempuri.org/IEmpService/RemoveEmpireResponse")]
        System.Threading.Tasks.Task<bool> RemoveEmpireAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/GetEmpire", ReplyAction="http://tempuri.org/IEmpService/GetEmpireResponse")]
        SoapClient.Soap.EmpireDTO GetEmpire(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/GetEmpire", ReplyAction="http://tempuri.org/IEmpService/GetEmpireResponse")]
        System.Threading.Tasks.Task<SoapClient.Soap.EmpireDTO> GetEmpireAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/ModifyEmpire", ReplyAction="http://tempuri.org/IEmpService/ModifyEmpireResponse")]
        bool ModifyEmpire(int id, string newName, string newGovernment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/ModifyEmpire", ReplyAction="http://tempuri.org/IEmpService/ModifyEmpireResponse")]
        System.Threading.Tasks.Task<bool> ModifyEmpireAsync(int id, string newName, string newGovernment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/ModifyEmpireName", ReplyAction="http://tempuri.org/IEmpService/ModifyEmpireNameResponse")]
        bool ModifyEmpireName(int id, string newName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/ModifyEmpireName", ReplyAction="http://tempuri.org/IEmpService/ModifyEmpireNameResponse")]
        System.Threading.Tasks.Task<bool> ModifyEmpireNameAsync(int id, string newName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/ModifyEmpireGovernment", ReplyAction="http://tempuri.org/IEmpService/ModifyEmpireGovernmentResponse")]
        bool ModifyEmpireGovernment(int id, string newGovernment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpService/ModifyEmpireGovernment", ReplyAction="http://tempuri.org/IEmpService/ModifyEmpireGovernmentResponse")]
        System.Threading.Tasks.Task<bool> ModifyEmpireGovernmentAsync(int id, string newGovernment);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmpServiceChannel : SoapClient.Soap.IEmpService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmpServiceClient : System.ServiceModel.ClientBase<SoapClient.Soap.IEmpService>, SoapClient.Soap.IEmpService {
        
        public EmpServiceClient() {
        }
        
        public EmpServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmpServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SoapClient.Soap.EmpireDTO[] GetEmpires() {
            return base.Channel.GetEmpires();
        }
        
        public System.Threading.Tasks.Task<SoapClient.Soap.EmpireDTO[]> GetEmpiresAsync() {
            return base.Channel.GetEmpiresAsync();
        }
        
        public string[] GetEmpireNames() {
            return base.Channel.GetEmpireNames();
        }
        
        public System.Threading.Tasks.Task<string[]> GetEmpireNamesAsync() {
            return base.Channel.GetEmpireNamesAsync();
        }
        
        public string[] GetGovernmentNames() {
            return base.Channel.GetGovernmentNames();
        }
        
        public System.Threading.Tasks.Task<string[]> GetGovernmentNamesAsync() {
            return base.Channel.GetGovernmentNamesAsync();
        }
        
        public bool AddEmpire(SoapClient.Soap.EmpireDTO empire) {
            return base.Channel.AddEmpire(empire);
        }
        
        public System.Threading.Tasks.Task<bool> AddEmpireAsync(SoapClient.Soap.EmpireDTO empire) {
            return base.Channel.AddEmpireAsync(empire);
        }
        
        public bool RemoveEmpire(int id) {
            return base.Channel.RemoveEmpire(id);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveEmpireAsync(int id) {
            return base.Channel.RemoveEmpireAsync(id);
        }
        
        public SoapClient.Soap.EmpireDTO GetEmpire(int id) {
            return base.Channel.GetEmpire(id);
        }
        
        public System.Threading.Tasks.Task<SoapClient.Soap.EmpireDTO> GetEmpireAsync(int id) {
            return base.Channel.GetEmpireAsync(id);
        }
        
        public bool ModifyEmpire(int id, string newName, string newGovernment) {
            return base.Channel.ModifyEmpire(id, newName, newGovernment);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyEmpireAsync(int id, string newName, string newGovernment) {
            return base.Channel.ModifyEmpireAsync(id, newName, newGovernment);
        }
        
        public bool ModifyEmpireName(int id, string newName) {
            return base.Channel.ModifyEmpireName(id, newName);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyEmpireNameAsync(int id, string newName) {
            return base.Channel.ModifyEmpireNameAsync(id, newName);
        }
        
        public bool ModifyEmpireGovernment(int id, string newGovernment) {
            return base.Channel.ModifyEmpireGovernment(id, newGovernment);
        }
        
        public System.Threading.Tasks.Task<bool> ModifyEmpireGovernmentAsync(int id, string newGovernment) {
            return base.Channel.ModifyEmpireGovernmentAsync(id, newGovernment);
        }
    }
}
